#include <stdio.h>
#include <stdlib.h>

#define MAX_PROCESS 5

typedef struct {
    int id;
    int priority;
    int burst_time;
} Process;

void schedule(Process processes[], int num_processes) {
    int current_time = 0;

    while (1) {
        int highest_priority = -1;
        int next_process = -1;

        // Find the process with the highest priority among the waiting processes
        for (int i = 0; i < num_processes; i++) {
            if (processes[i].burst_time > 0 && processes[i].priority > highest_priority) {
                highest_priority = processes[i].priority;
                next_process = i;
            }
        }

        if (next_process == -1) {
            // No processes left to execute
            break;
        }

        // Execute the selected process for 1 time unit
        processes[next_process].burst_time--;
        current_time++;

        printf("Time: %d, Executing Process: %d\n", current_time, processes[next_process].id);
    }
}

int main() {
    Process processes[MAX_PROCESS] = {
        {1, 2, 5},
        {2, 1, 3},
        {3, 3, 2},
        {4, 4, 4},
        {5, 2, 6}
    };

    int num_processes = sizeof(processes) / sizeof(processes[0]);

    printf("Priority-based Scheduling:\n");
    schedule(processes, num_processes);

    return 0;
}
